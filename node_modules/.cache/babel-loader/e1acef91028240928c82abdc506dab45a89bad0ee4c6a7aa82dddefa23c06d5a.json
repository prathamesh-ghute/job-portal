{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/PostJob.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nconst PostJob = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [formData, setFormData] = useState({\n    job_title: '',\n    employer_name: '',\n    job_city: '',\n    job_country: 'India',\n    job_description: '',\n    job_highlights: {\n      Qualifications: ['']\n    },\n    job_employment_type: 'Full-time',\n    job_salary_currency: 'INR',\n    job_min_salary: '',\n    job_max_salary: '',\n    job_apply_link: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Please login to post a job');\n      }\n\n      // Validate required fields\n      if (!formData.job_title || !formData.employer_name || !formData.job_city) {\n        throw new Error('Please fill all required fields');\n      }\n\n      // Clean up qualifications array\n      const cleanedQualifications = formData.job_highlights.Qualifications.filter(q => q.trim() !== '');\n      const jobData = {\n        ...formData,\n        job_highlights: {\n          Qualifications: cleanedQualifications\n        },\n        job_min_salary: Number(formData.job_min_salary) || 0,\n        job_max_salary: Number(formData.job_max_salary) || 0\n      };\n      console.log('Sending job data:', jobData); // Debug log\n\n      const response = await axios.post('http://localhost:5000/api/jobs', jobData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Response:', response.data); // Debug log\n\n      if (response.data) {\n        navigate('/jobs');\n        alert('Job posted successfully!');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error details:', err); // Debug log\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Error posting job');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ... rest of your component code\n};\n_s(PostJob, \"t74bgO7mUTt/w1W1Yy1alW12SCg=\", false, function () {\n  return [useNavigate];\n});\n_c = PostJob;\nexport default PostJob;\nvar _c;\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"names":["React","useState","useNavigate","axios","PostJob","_s","navigate","loading","setLoading","error","setError","formData","setFormData","job_title","employer_name","job_city","job_country","job_description","job_highlights","Qualifications","job_employment_type","job_salary_currency","job_min_salary","job_max_salary","job_apply_link","handleSubmit","e","preventDefault","token","localStorage","getItem","Error","cleanedQualifications","filter","q","trim","jobData","Number","console","log","response","post","headers","data","alert","err","_err$response","_err$response$data","message","_c","$RefreshReg$"],"sources":["E:/job_portal/job_portal/src/pages/PostJob.js"],"sourcesContent":["// src/components/PostJob.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PostJob = () => {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const [formData, setFormData] = useState({\r\n        job_title: '',\r\n        employer_name: '',\r\n        job_city: '',\r\n        job_country: 'India',\r\n        job_description: '',\r\n        job_highlights: {\r\n            Qualifications: ['']\r\n        },\r\n        job_employment_type: 'Full-time',\r\n        job_salary_currency: 'INR',\r\n        job_min_salary: '',\r\n        job_max_salary: '',\r\n        job_apply_link: '',\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Please login to post a job');\r\n            }\r\n\r\n            // Validate required fields\r\n            if (!formData.job_title || !formData.employer_name || !formData.job_city) {\r\n                throw new Error('Please fill all required fields');\r\n            }\r\n\r\n            // Clean up qualifications array\r\n            const cleanedQualifications = formData.job_highlights.Qualifications.filter(q => q.trim() !== '');\r\n\r\n            const jobData = {\r\n                ...formData,\r\n                job_highlights: {\r\n                    Qualifications: cleanedQualifications\r\n                },\r\n                job_min_salary: Number(formData.job_min_salary) || 0,\r\n                job_max_salary: Number(formData.job_max_salary) || 0,\r\n            };\r\n\r\n            console.log('Sending job data:', jobData); // Debug log\r\n\r\n            const response = await axios.post('http://localhost:5000/api/jobs', jobData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            console.log('Response:', response.data); // Debug log\r\n\r\n            if (response.data) {\r\n                navigate('/jobs');\r\n                alert('Job posted successfully!');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error details:', err); // Debug log\r\n            setError(err.response?.data?.message || err.message || 'Error posting job');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // ... rest of your component code\r\n};\r\n\r\nexport default PostJob;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}