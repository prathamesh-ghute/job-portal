{"ast":null,"code":"var _jsxFileName = \"E:\\\\job_portal\\\\job_portal\\\\src\\\\pages\\\\JobListings.js\",\n  _s = $RefreshSig$();\n// src/pages/JobListings.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport JobCard from '../components/JobCard';\nimport SearchBar from '../components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListings = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const fetchJobs = async (query = 'Software Developer') => {\n    const options = {\n      method: 'GET',\n      url: 'https://jsearch.p.rapidapi.com/search',\n      params: {\n        query: query,\n        page: '1',\n        num_pages: '1'\n      },\n      headers: {\n        'X-RapidAPI-Key': 'e09cede52dmsh581a47e5d817d93p16ffaejsn51e0434c6a96',\n        'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n      }\n    };\n    try {\n      setLoading(true);\n      const response = await axios.request(options);\n      setJobs(response.data.data || []);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      setError('Failed to load jobs. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const handleSearch = () => {\n    const searchQuery = `${searchTerm} ${location ? 'in ' + location : ''}`.trim();\n    fetchJobs(searchQuery);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      location: location,\n      setLocation: setLocation,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchJobs(),\n        className: \"mt-4 text-indigo-600 hover:text-indigo-800\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No jobs found matching your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-6 mt-6\",\n      children: jobs.map(job => {\n        var _job$job_highlights;\n        return /*#__PURE__*/_jsxDEV(JobCard, {\n          job: {\n            _id: job.job_id,\n            title: job.job_title,\n            company: job.employer_name,\n            location: job.job_city || job.job_country,\n            description: job.job_description,\n            requirements: ((_job$job_highlights = job.job_highlights) === null || _job$job_highlights === void 0 ? void 0 : _job$job_highlights.Qualifications) || [],\n            salary: job.job_max_salary ? `$${job.job_max_salary}` : 'Salary not specified',\n            type: job.job_employment_type || 'Full-time',\n            createdAt: job.job_posted_at_datetime_utc,\n            url: job.job_apply_link\n          }\n        }, job.job_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(JobListings, \"kap0Ta8F5OIV9ExpUjk2J4bfbbw=\");\n_c = JobListings;\nexport default JobListings;\nvar _c;\n$RefreshReg$(_c, \"JobListings\");","map":{"version":3,"names":["React","useState","useEffect","axios","JobCard","SearchBar","jsxDEV","_jsxDEV","JobListings","_s","jobs","setJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","location","setLocation","fetchJobs","query","options","method","url","params","page","num_pages","headers","response","request","data","console","handleSearch","searchQuery","trim","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","job","_job$job_highlights","_id","job_id","title","job_title","company","employer_name","job_city","job_country","description","job_description","requirements","job_highlights","Qualifications","salary","job_max_salary","type","job_employment_type","createdAt","job_posted_at_datetime_utc","job_apply_link","_c","$RefreshReg$"],"sources":["E:/job_portal/job_portal/src/pages/JobListings.js"],"sourcesContent":["// src/pages/JobListings.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport JobCard from '../components/JobCard';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\nconst JobListings = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [location, setLocation] = useState('');\r\n\r\n    const fetchJobs = async (query = 'Software Developer') => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://jsearch.p.rapidapi.com/search',\r\n            params: {\r\n                query: query,\r\n                page: '1',\r\n                num_pages: '1'\r\n            },\r\n            headers: {\r\n                'X-RapidAPI-Key': 'e09cede52dmsh581a47e5d817d93p16ffaejsn51e0434c6a96',\r\n                'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.request(options);\r\n            setJobs(response.data.data || []);\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n            setError('Failed to load jobs. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        const searchQuery = `${searchTerm} ${location ? 'in ' + location : ''}`.trim();\r\n        fetchJobs(searchQuery);\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n            <SearchBar\r\n                searchTerm={searchTerm}\r\n                setSearchTerm={setSearchTerm}\r\n                location={location}\r\n                setLocation={setLocation}\r\n                onSearch={handleSearch}\r\n            />\r\n\r\n            {loading ? (\r\n                <div className=\"flex items-center justify-center py-20\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\r\n                </div>\r\n            ) : error ? (\r\n                <div className=\"text-center py-8\">\r\n                    <p className=\"text-red-600\">{error}</p>\r\n                    <button \r\n                        onClick={() => fetchJobs()} \r\n                        className=\"mt-4 text-indigo-600 hover:text-indigo-800\"\r\n                    >\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            ) : jobs.length === 0 ? (\r\n                <div className=\"text-center py-8\">\r\n                    <p className=\"text-gray-500\">No jobs found matching your criteria.</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 gap-6 mt-6\">\r\n                    {jobs.map((job) => (\r\n                        <JobCard \r\n                            key={job.job_id} \r\n                            job={{\r\n                                _id: job.job_id,\r\n                                title: job.job_title,\r\n                                company: job.employer_name,\r\n                                location: job.job_city || job.job_country,\r\n                                description: job.job_description,\r\n                                requirements: job.job_highlights?.Qualifications || [],\r\n                                salary: job.job_max_salary ? `$${job.job_max_salary}` : 'Salary not specified',\r\n                                type: job.job_employment_type || 'Full-time',\r\n                                createdAt: job.job_posted_at_datetime_utc,\r\n                                url: job.job_apply_link\r\n                            }} \r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobListings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}