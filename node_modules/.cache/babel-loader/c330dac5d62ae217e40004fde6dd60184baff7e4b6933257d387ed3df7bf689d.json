{"ast":null,"code":"// src/pages/JobListings.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import JobCard from'../components/JobCard';import SearchBar from'../components/SearchBar';import InfiniteScroll from'react-infinite-scroll-component';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobListings=()=>{const[jobs,setJobs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[searchTerm,setSearchTerm]=useState('');const[location,setLocation]=useState('');const[page,setPage]=useState(1);const[hasMore,setHasMore]=useState(true);const[currentQuery,setCurrentQuery]=useState('Software Developer in India');const fetchJobs=async function(){let query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentQuery;let pageNum=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let isNewSearch=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const options={method:'GET',url:'https://jsearch.p.rapidapi.com/search',params:{query:query,page:pageNum.toString(),num_pages:'1',date_posted:'all'},headers:{'X-RapidAPI-Key':'e09cede52dmsh581a47e5d817d93p16ffaejsn51e0434c6a96','X-RapidAPI-Host':'jsearch.p.rapidapi.com'}};try{if(pageNum===1){setLoading(true);}setError('');const response=await axios.request(options);if(response.data&&response.data.data){if(isNewSearch){setJobs(response.data.data);}else{setJobs(prevJobs=>[...prevJobs,...response.data.data]);}// If we received fewer items than expected, there are no more jobs to load\nsetHasMore(response.data.data.length>=10);}else{throw new Error('No data received from API');}}catch(error){var _error$response,_error$response$data;console.error('Error fetching jobs:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to load jobs');setHasMore(false);}finally{setLoading(false);}};useEffect(()=>{fetchJobs(currentQuery,1,true);},[]);const handleSearch=()=>{const searchQuery=`${searchTerm} ${location?'in '+location:''}`.trim();setCurrentQuery(searchQuery||'Software Developer in India');setPage(1);fetchJobs(searchQuery||'Software Developer in India',1,true);};const loadMore=()=>{const nextPage=page+1;setPage(nextPage);fetchJobs(currentQuery,nextPage,false);};const LoadingSpinner=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"})});return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-4\",children:\"Job Listings\"}),/*#__PURE__*/_jsx(SearchBar,{searchTerm:searchTerm,setSearchTerm:setSearchTerm,location:location,setLocation:setLocation,onSearch:handleSearch})]}),loading&&page===1?/*#__PURE__*/_jsx(LoadingSpinner,{}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 mb-4\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchJobs(currentQuery,1,true),className:\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\",children:\"Try Again\"})]}):jobs.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No jobs found matching your criteria.\"})}):/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:jobs.length,next:loadMore,hasMore:hasMore,loader:/*#__PURE__*/_jsx(LoadingSpinner,{}),endMessage:null// Removed the end message\n,scrollThreshold:\"90%\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-6\",children:jobs.map((job,index)=>{var _job$job_highlights,_job$job_highlights2;return/*#__PURE__*/_jsx(JobCard,{job:{_id:job.job_id,title:job.job_title,company:job.employer_name,location:`${job.job_city||''} ${job.job_country||''}`.trim(),description:job.job_description,requirements:((_job$job_highlights=job.job_highlights)===null||_job$job_highlights===void 0?void 0:_job$job_highlights.Qualifications)||((_job$job_highlights2=job.job_highlights)===null||_job$job_highlights2===void 0?void 0:_job$job_highlights2.Requirements)||[],salary:job.job_salary||'Salary not specified',type:job.job_employment_type||'Full-time',createdAt:job.job_posted_at_datetime_utc,url:job.job_apply_link}},`${job.job_id}-${index}`);})})})]});};export default JobListings;","map":{"version":3,"names":["React","useState","useEffect","axios","JobCard","SearchBar","InfiniteScroll","jsx","_jsx","jsxs","_jsxs","JobListings","jobs","setJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","location","setLocation","page","setPage","hasMore","setHasMore","currentQuery","setCurrentQuery","fetchJobs","query","arguments","length","undefined","pageNum","isNewSearch","options","method","url","params","toString","num_pages","date_posted","headers","response","request","data","prevJobs","Error","_error$response","_error$response$data","console","message","handleSearch","searchQuery","trim","loadMore","nextPage","LoadingSpinner","className","children","onSearch","onClick","dataLength","next","loader","endMessage","scrollThreshold","map","job","index","_job$job_highlights","_job$job_highlights2","_id","job_id","title","job_title","company","employer_name","job_city","job_country","description","job_description","requirements","job_highlights","Qualifications","Requirements","salary","job_salary","type","job_employment_type","createdAt","job_posted_at_datetime_utc","job_apply_link"],"sources":["E:/job_portal/job_portal/src/pages/JobListings.js"],"sourcesContent":["// src/pages/JobListings.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport JobCard from '../components/JobCard';\r\nimport SearchBar from '../components/SearchBar';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst JobListings = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [currentQuery, setCurrentQuery] = useState('Software Developer in India');\r\n\r\n    const fetchJobs = async (query = currentQuery, pageNum = 1, isNewSearch = false) => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://jsearch.p.rapidapi.com/search',\r\n            params: {\r\n                query: query,\r\n                page: pageNum.toString(),\r\n                num_pages: '1',\r\n                date_posted: 'all'\r\n            },\r\n            headers: {\r\n                'X-RapidAPI-Key': 'e09cede52dmsh581a47e5d817d93p16ffaejsn51e0434c6a96',\r\n                'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            if (pageNum === 1) {\r\n                setLoading(true);\r\n            }\r\n            setError('');\r\n\r\n            const response = await axios.request(options);\r\n\r\n            if (response.data && response.data.data) {\r\n                if (isNewSearch) {\r\n                    setJobs(response.data.data);\r\n                } else {\r\n                    setJobs(prevJobs => [...prevJobs, ...response.data.data]);\r\n                }\r\n\r\n                // If we received fewer items than expected, there are no more jobs to load\r\n                setHasMore(response.data.data.length >= 10);\r\n            } else {\r\n                throw new Error('No data received from API');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n            setError(error.response?.data?.message || 'Failed to load jobs');\r\n            setHasMore(false);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchJobs(currentQuery, 1, true);\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        const searchQuery = `${searchTerm} ${location ? 'in ' + location : ''}`.trim();\r\n        setCurrentQuery(searchQuery || 'Software Developer in India');\r\n        setPage(1);\r\n        fetchJobs(searchQuery || 'Software Developer in India', 1, true);\r\n    };\r\n\r\n    const loadMore = () => {\r\n        const nextPage = page + 1;\r\n        setPage(nextPage);\r\n        fetchJobs(currentQuery, nextPage, false);\r\n    };\r\n\r\n    const LoadingSpinner = () => (\r\n        <div className=\"flex items-center justify-center py-4\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n            <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Job Listings</h1>\r\n                <SearchBar\r\n                    searchTerm={searchTerm}\r\n                    setSearchTerm={setSearchTerm}\r\n                    location={location}\r\n                    setLocation={setLocation}\r\n                    onSearch={handleSearch}\r\n                />\r\n            </div>\r\n\r\n            {loading && page === 1 ? (\r\n                <LoadingSpinner />\r\n            ) : error ? (\r\n                <div className=\"text-center py-8\">\r\n                    <p className=\"text-red-600 mb-4\">{error}</p>\r\n                    <button\r\n                        onClick={() => fetchJobs(currentQuery, 1, true)}\r\n                        className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\r\n                    >\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            ) : jobs.length === 0 ? (\r\n                <div className=\"text-center py-8\">\r\n                    <p className=\"text-gray-500\">No jobs found matching your criteria.</p>\r\n                </div>\r\n            ) : (\r\n                <InfiniteScroll\r\n                    dataLength={jobs.length}\r\n                    next={loadMore}\r\n                    hasMore={hasMore}\r\n                    loader={<LoadingSpinner />}\r\n                    endMessage={null} // Removed the end message\r\n                    scrollThreshold=\"90%\"\r\n                >\r\n                    <div className=\"grid grid-cols-1 gap-6\">\r\n                        {jobs.map((job, index) => (\r\n                            <JobCard\r\n                                key={`${job.job_id}-${index}`}\r\n                                job={{\r\n                                    _id: job.job_id,\r\n                                    title: job.job_title,\r\n                                    company: job.employer_name,\r\n                                    location: `${job.job_city || ''} ${job.job_country || ''}`.trim(),\r\n                                    description: job.job_description,\r\n                                    requirements:\r\n                                        job.job_highlights?.Qualifications ||\r\n                                        job.job_highlights?.Requirements ||\r\n                                        [],\r\n                                    salary: job.job_salary || 'Salary not specified',\r\n                                    type: job.job_employment_type || 'Full-time',\r\n                                    createdAt: job.job_posted_at_datetime_utc,\r\n                                    url: job.job_apply_link\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </InfiniteScroll>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobListings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}